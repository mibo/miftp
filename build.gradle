buildscript {
	ext {
		kotlinVersion = '1.3.60'
		springBootVersion = '2.2.2.RELEASE'
        ftpServerVersion = '1.1.1'
        ftpClientVersion = '3.6'
        junitVersion = '4.12'
        slf4jVersion = '1.7.25'
        logbackVersion = '1.2.3'
		ktorVersion = '1.2.3'
		mockkVersion = '1.9'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}

}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'de.mirb.project'
version = '0.9.0-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

springBoot {
    // This statement tells the Gradle Spring Boot plugin
    // to generate a file
    // build/resources/main/META-INF/build-info.properties
    // that is picked up by Spring Boot to display
    // via /info endpoint.
    buildInfo()
}

repositories {
	mavenCentral()
}


dependencies {
    implementation("org.apache.ftpserver:ftpserver-core:${ftpServerVersion}")
	implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")
	implementation("io.ktor:ktor-client-cio:${ktorVersion}")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
    testImplementation("commons-net:commons-net:${ftpClientVersion}")
    testImplementation("junit:junit:${junitVersion}")
	testImplementation "io.mockk:mockk:${mockkVersion}"
}
